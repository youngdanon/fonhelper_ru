{"version":3,"sources":["components/table/blockLog.js","components/table/eventLine.js","components/table/tableHeader.js","context.js","components/table/tablefilters/sportCheckbox.js","components/table/tablefilters/filters.js","components/table/renderTable.js","App.js","reportWebVitals.js","index.js"],"names":["BlockLog","props","useState","blockLogs","setBlockLogs","eventId","level","useEffect","axios","method","url","params","then","response","data","interval","setInterval","clearInterval","className","map","blockLog","score","time","factor","param","value","EventLine","state","open","this","setState","event","eventToRender","onClick","toggleOpen","bind","name","counters","c","id","Component","TableHeader","liveEvents","length","Context","React","createContext","SportCheckbox","useContext","unselectSport","selectSport","sportId","sport","sportName","checked","setChecked","Filters","sportFilters","sportData","EventTable","sportIds","setSportIds","setSportFilters","buffer","push","setLiveEvents","join","Provider","filter","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35f1ec8d.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function BlockLog(props) {\n    let [blockLogs, setBlockLogs] = useState([])\n    let eventId = props.eventId;\n    let level = props.level;\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/event_blocks_info/',\n            params: {'event_id': eventId}\n        }).then(response => {\n            setBlockLogs(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/event_blocks_info/',\n                params: {'event_id': eventId}\n            }).then(response => {\n                setBlockLogs(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className={\"blockLog-table level-\"+ level}>\n            {blockLogs.map(blockLog  => (\n                <div className=\"row log\">\n                    <div className=\"log-item score col-2 col-lg-1\">{blockLog.score}</div>\n                    <div className=\"log-item time col-2 col-lg-1\">{blockLog.time}</div>\n                    <div className=\"log-item factor col-2 col-lg-1\">{blockLog.factor}</div>\n                    {(blockLog.param)\n                        ? <div className=\"log-item param col-2 col-lg-1\">{blockLog.param}</div>\n                        : <div className=\"log-item param col-2 col-lg-1\"/>\n                    }\n                    <div className=\"log-item value col-2 col-lg-1\">{blockLog.value}</div>\n                </div>\n            ))}\n        </div>\n    )\n\n}","import React, {Component} from 'react';\nimport BlockLog from \"./blockLog\";\n\n\nclass EventLine extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {open: false}\n    }\n\n    toggleOpen() {\n        this.setState({open: !this.state.open})\n    }\n\n    render() {\n        let className = this.state.open ? 'opened' : 'closed';\n        let event = this.props.eventToRender\n        return (\n            <div className=\"foldable\">\n                <div className=\"line row\" key={event.id} onClick={this.toggleOpen.bind(this)}>\n                    <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n                        <h6>{event.name}</h6>\n                    </div>\n                    <div className=\"col-md-12 col-lg-5 counters\">\n                        {event.counters.map(c => (\n                            <div className=\"counter\"><p>{c}</p></div>\n                        ))}\n                    </div>\n                </div>\n                {this.state.open\n                    ? <div className={className}>\n                        <BlockLog eventId={event.id} level={event.level}/>\n                    </div>\n                    : \"\"}\n            </div>\n        )\n    }\n}\n\nexport default EventLine\n","import React from 'react';\n\nexport default function TableHeader(props) {\n\n    let liveEvents = props.liveEvents\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"table-header\">\n            <div className=\"line row\">\n                <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                </div>\n                <div className=\"col-md-12 col-lg-5 counters\">\n                    {baseFactors.map(factor => (\n                        <div className=\"counter\">{factor}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext();\nexport default Context\n","import React, {useContext, useState} from 'react';\nimport Context from \"../../../context\";\n\nexport default function SportCheckbox(props) {\n    const {unselectSport, selectSport} = useContext(Context)\n    const sportId = props.sport.id\n    const sportName = props.sport.name\n\n    const [checked, setChecked] = useState(true);\n    const handleChange = () => {\n        setChecked(!checked);\n        if (!checked) {\n            selectSport(sportId)\n        } else {\n            unselectSport(sportId)\n        }\n\n    };\n    return (\n        <div className=\"col-6 col-md-3 col-lg-2 sport-checkbox\" key={sportId} >\n            <div className={\"selector\" + (checked ? \"selected\" : \"unselected\")} onClick={handleChange}>\n                {sportName}\n            </div>\n        </div>\n    )\n}\n","import React, {useEffect, useState, useContext} from 'react';\nimport SportCheckbox from './sportCheckbox'\n\nexport default function Filters(props) {\n    const sportFilters = props.sportFilters\n    return(\n        <div className=\"row sport-filters\">\n            {sportFilters.map(sportData => (\n                <SportCheckbox sport={sportData}/>\n            ))}\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport EventLine from \"./eventLine\";\nimport axios from \"axios\";\nimport TableHeader from \"./tableHeader\"\nimport Context from \"../../context\";\nimport Filters from \"./tablefilters/filters\";\n\nexport default function EventTable(props) {\n\n    let [sportIds, setSportIds] = useState([])\n    let [sportFilters, setSportFilters] = useState([])\n\n    function unselectSport(sportId) {\n        setSportIds(sportIds.filter(id => id !== sportId))\n    }\n\n    function selectSport(sportId) {\n        setSportIds(sportIds.concat(sportId));\n    }\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: 'api/sports/'\n        }).then(response => {\n            setSportFilters(response.data)\n            let buffer = []\n            response.data.map(sportData => {\n                buffer.push(sportData.id)\n            })\n            setSportIds(buffer)\n        })\n    }, [])\n\n\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n            params: {'sports': sportIds.join()}\n        }).then(response => {\n            setLiveEvents(response.data);\n\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n                params: {'sports': sportIds.join()}\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, [sportIds]);\n\n\n    return (\n\n        <div className=\"events-table\">\n            <Context.Provider value={{unselectSport, selectSport}}>\n                <Filters sportFilters={sportFilters}/>\n            </Context.Provider>\n            <TableHeader liveEvents={liveEvents}/>\n            <div className=\"table-body\">\n                {liveEvents.map(event => (\n                    <EventLine eventToRender={event}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventTable from \"./components/table/renderTable\";\nfunction App() {\n\n\n\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <h1>Текущие события:</h1>\n            <EventTable/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}