{"version":3,"sources":["components/table/eventLine.js","components/table/tableHeader.js","components/table/renderTable.js","App.js","reportWebVitals.js","index.js"],"names":["EventLine","props","eventToRender","TableHeader","liveEvents","className","length","map","factor","EventTable","useState","setLiveEvents","useEffect","axios","method","url","then","response","data","interval","setInterval","clearInterval","event","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAKe,SAASA,EAAUC,GA+BlBA,EAAMC,cAGlB,OACI,mCCtCO,SAASC,EAAYF,GAEhC,IAAIG,EAAaH,EAAMG,WAGvB,OACI,qBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,gCAAf,SAA+C,yHAAsBD,EAAWE,YAEhF,qBAAKD,UAAU,8BAAf,SAPQ,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,UAAM,UAAM,eAAM,eAAM,KAQjDE,KAAI,SAAAC,GAAM,OACnB,qBAAKH,UAAU,UAAf,SAA0BG,cCTnC,SAASC,EAAWR,GAC/B,MAAkCS,mBAAS,IAA3C,mBAAKN,EAAL,KAAiBO,EAAjB,KAmBA,OAlBAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,SAE3B,IAAMC,EAAWC,aAAY,WACzBP,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAE5B,MACH,OAAO,kBAAMG,cAAcF,MAC5B,IAGC,sBAAKd,UAAU,eAAf,UACI,cAACF,EAAD,CAAaC,WAAYA,IACzB,qBAAKC,UAAU,aAAf,SACKD,EAAWG,KAAI,SAAAe,GAAK,OACjB,cAACtB,EAAD,CAAWE,cAAeoB,YCb/BC,MAZf,WAII,OACI,sBAAKlB,UAAU,8BAAf,UACI,wHACA,cAACI,EAAD,QCAGe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3aa73a67.chunk.js","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\n\nimport BlockLog from \"./blockLog\";\n\nexport default function EventLine(props) {\n\n    let renderEventLog = React.createElement({\n        getInitialState: function () {\n            return {open: false}\n        },\n        toggleOpen: function () {\n            this.setState({open: !this.state.open})\n        },\n        render: function () {\n            let className = this.state.open ? 'opened' : 'closed';\n            return (\n                <div className=\"foldable\">\n                    <div className=\"line row\" key={event.id} onClick={this.toggleOpen}>\n                        <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n                            <h6>{event.name}</h6>\n                        </div>\n                        <div className=\"col-md-12 col-lg-5 counters\">\n                            {event.counters.map(c => (\n                                <div className=\"counter\"><p>{c}</p></div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className={className}>\n                        <BlockLog eventId={event.id}/>\n                    </div>\n                </div>\n            )\n        }\n    })\n\n    let event = props.eventToRender\n\n\n    return (\n        <renderEventLog/>\n        // <div className=\"line row\" key={event.id} onClick={renderEventLog}>\n        //     <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}><h6>{event.name}</h6>\n        //     </div>\n        //     <div className=\"col-md-12 col-lg-5 counters\">\n        //         {event.counters.map(c => (\n        //             <div className=\"counter\"><p>{c}</p></div>\n        //         ))}\n        //     </div>\n        // </div>\n    )\n}","import React from 'react';\n\nexport default function TableHeader(props) {\n\n    let liveEvents = props.liveEvents\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"table-header\">\n            <div className=\"line row\">\n                <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                </div>\n                <div className=\"col-md-12 col-lg-5 counters\">\n                    {baseFactors.map(factor => (\n                        <div className=\"counter\">{factor}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport EventLine from \"./eventLine\";\nimport axios from \"axios\";\nimport TableHeader from \"./tableHeader\"\n\nexport default function EventTable(props) {\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n        }).then(response => {\n            setLiveEvents(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"events-table\">\n            <TableHeader liveEvents={liveEvents}/>\n            <div className=\"table-body\">\n                {liveEvents.map(event => (\n                    <EventLine eventToRender={event}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventTable from \"./components/table/renderTable\";\n\nfunction App() {\n\n\n\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <h1>Текущие события:</h1>\n            <EventTable/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}