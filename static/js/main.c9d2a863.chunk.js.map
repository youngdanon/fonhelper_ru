{"version":3,"sources":["components/table/blockLog.js","components/table/eventLine.js","components/table/tableHeader.js","components/table/renderTable.js","App.js","reportWebVitals.js","index.js"],"names":["BlockLog","props","useState","blockLogs","setBlockLogs","eventId","useEffect","axios","method","url","params","then","response","data","interval","setInterval","clearInterval","className","map","blockLog","score","time","factor","param","value","EventLine","React","createClass","getInitialState","open","toggleOpen","this","setState","state","render","onClick","event","level","name","counters","c","id","eventToRender","TableHeader","liveEvents","length","EventTable","setLiveEvents","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9d2a863.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function BlockLog(props) {\n    let [blockLogs, setBlockLogs] = useState([])\n    let eventId = props.eventId;\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n            params: {'event_id': eventId}\n        }).then(response => {\n            setBlockLogs(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n                params: {'event_id': eventId}\n            }).then(response => {\n                setBlockLogs(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"blockLog-table\">\n            {blockLogs.map(blockLog  => (\n                <div className=\"row log\">\n                    <div className=\"log-item score\">{blockLog.score}</div>\n                    <div className=\"log-item time\">{blockLog.time}</div>\n                    <div className=\"log-item factor\">{blockLog.factor}</div>\n                    {(blockLog.param)\n                        ? <div className=\"log-item param\">{blockLog.param}</div>\n                        : \"\"\n                    }\n                    <div className=\"log-item value\">{blockLog.value}</div>\n                </div>\n            ))}\n        </div>\n    )\n\n}","import React from 'react';\nimport axios from \"axios\";\n\nimport BlockLog from \"./blockLog\";\n\nexport default function EventLine(props) {\n\n    let renderEventLog = React.createClass({\n        getInitialState: function () {\n            return {open: false}\n        },\n        toggleOpen: function () {\n            this.setState({open: !this.state.open})\n        },\n        render: function () {\n            let className = this.state.open ? 'opened' : 'closed';\n            return (\n                <div className=\"foldable\">\n                    <div className=\"line row\" key={event.id} onClick={this.toggleOpen}>\n                        <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n                            <h6>{event.name}</h6>\n                        </div>\n                        <div className=\"col-md-12 col-lg-5 counters\">\n                            {event.counters.map(c => (\n                                <div className=\"counter\"><p>{c}</p></div>\n                            ))}\n                        </div>\n                    </div>\n                    <div className={className}>\n                        <BlockLog eventId={event.id}/>\n                    </div>\n                </div>\n            )\n        }\n    })\n\n    let event = props.eventToRender\n\n\n    return (\n        <renderEventLog/>\n        // <div className=\"line row\" key={event.id} onClick={renderEventLog}>\n        //     <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}><h6>{event.name}</h6>\n        //     </div>\n        //     <div className=\"col-md-12 col-lg-5 counters\">\n        //         {event.counters.map(c => (\n        //             <div className=\"counter\"><p>{c}</p></div>\n        //         ))}\n        //     </div>\n        // </div>\n    )\n}","import React from 'react';\n\nexport default function TableHeader(props) {\n\n    let liveEvents = props.liveEvents\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"table-header\">\n            <div className=\"line row\">\n                <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                </div>\n                <div className=\"col-md-12 col-lg-5 counters\">\n                    {baseFactors.map(factor => (\n                        <div className=\"counter\">{factor}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport EventLine from \"./eventLine\";\nimport axios from \"axios\";\nimport TableHeader from \"./tableHeader\"\n\nexport default function EventTable(props) {\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n        }).then(response => {\n            setLiveEvents(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"events-table\">\n            <TableHeader liveEvents={liveEvents}/>\n            <div className=\"table-body\">\n                {liveEvents.map(event => (\n                    <EventLine eventToRender={event}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventTable from \"./components/table/renderTable\";\n\nfunction App() {\n\n\n\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <h1>Текущие события:</h1>\n            <EventTable/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}