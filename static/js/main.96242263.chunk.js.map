{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","liveEvents","setLiveEvents","useEffect","axios","method","url","then","response","data","console","log","className","scope","counters","map","factor","event","name","id","c","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,I,qCC8CAA,MAxCf,WACI,MAAkCC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAYA,OAXAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,YAG/BC,QAAQC,IAAIV,GAIR,sBAAKW,UAAU,MAAf,UACI,uCACA,wBAAOA,UAAU,QAAjB,UACI,gCACA,+BACI,oBAAIC,MAAM,MAAV,wBACCZ,EAAW,GAAGa,SAASC,KAAI,SAAAN,GAAI,OAC5B,oBAAII,MAAM,MAAV,SAAiBJ,EAAKO,iBAI9B,gCACCf,EAAWc,KAAI,SAAAE,GAAK,OACjB,+BACI,oBAAIJ,MAAM,MAAV,SAAgCI,EAAMC,MAAjBD,EAAME,IAC1BF,EAAMH,SAASC,KAAI,SAAAK,GAAC,OACjB,6BAAKA,EAAEC,0BCxBpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.96242263.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n        }).then(response => {\n            setLiveEvents(response.data);\n        })\n    })\n    console.log(liveEvents)\n\n\n    return (\n        <div className=\"App\">\n            <h1>hello</h1>\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th scope=\"col\">Event Name</th>\n                    {liveEvents[0].counters.map(data => (\n                        <th scope=\"col\">{data.factor}</th>\n                    ))}\n                </tr>\n                </thead>\n                <tbody>\n                {liveEvents.map(event => (\n                    <tr>\n                        <th scope=\"row\" key={event.id}>{event.name}</th>\n                        {event.counters.map(c => (\n                            <td>{c.value}</td>\n                        ))}\n                    </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}