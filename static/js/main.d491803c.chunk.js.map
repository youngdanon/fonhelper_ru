{"version":3,"sources":["components/table/blockLog.js","components/table/eventLine.js","components/table/tableHeader.js","context.js","components/table/tablefilters/sportCheckbox.js","components/table/tablefilters/blocksFilters.js","components/table/tablefilters/filters.js","components/table/renderTable.js","App.js","reportWebVitals.js","index.js"],"names":["BlockLog","props","useState","blockLogs","setBlockLogs","eventId","useEffect","axios","method","url","params","then","response","data","interval","setInterval","clearInterval","className","map","blockLog","comment","score","time","param","factor","value","length","EventLine","event","k2","k2value","isOpened","setIsOpened","setClassName","onClick","level","name","counters","c","this","state","open","id","TableHeader","liveEvents","Context","React","createContext","SportCheckbox","useContext","unselectSport","selectSport","sportId","sport","sportName","checked","setChecked","BlocksFilters","countersFilterUpdate","repeatsFilterUpdate","k1value","setK1value","setK2value","type","onChange","e","target","handleClick","Filters","sportFilters","sportData","EventTable","sportIds","setSportIds","setSportFilters","k1","setK1","setK2","buffer","push","setLiveEvents","join","Provider","filter","concat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d491803c.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function BlockLog(props) {\n    let [blockLogs, setBlockLogs] = useState([])\n    let eventId = props.eventId;\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/event_blocks_info/',\n            params: {'event_id': eventId}\n        }).then(response => {\n            setBlockLogs(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/event_blocks_info/',\n                params: {'event_id': eventId}\n            }).then(response => {\n                setBlockLogs(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"blockLog-table\">\n            {blockLogs.map(blockLog  => (\n                <div className=\"row log\">\n                    <div className=\"log-item score col-4 col-lg-3 text-muted\">{blockLog.comment}</div>\n                    <div className=\"log-item score col-2 col-lg-1\">{blockLog.score}</div>\n                    <div className=\"log-item time col-2 col-lg-1\">{blockLog.time}</div>\n                    {(blockLog.param)\n                        ? <div className=\"log-item param col-2 col-lg-2\"> <b>{blockLog.factor}</b> ({blockLog.param})</div>\n                        : <div className=\"log-item factor col-2 col-lg-2\"><b>{blockLog.factor}</b></div>\n                    }\n                    <div className=\"log-item value col-2 col-lg-1\">{blockLog.value}</div>\n                </div>\n            ))}\n            {!blockLogs.length ? <span className=\"warning\">Не найдено блокировок по данному событию</span> : \"\"}\n        </div>\n    )\n\n}","import React, {Component, useState} from 'react';\nimport BlockLog from \"./blockLog\";\nimport MultiPlayer from \"../multiplayer\";\nimport useSound from \"use-sound\";\n\n\n// class EventLine extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {open: false}\n//         this.play = useSound('../../../../static/media/alert.mp3');\n//     }\n//\n//     toggleOpen() {\n//         this.setState({open: !this.state.open})\n//     }\n//\n//     render() {\n//         let className = this.state.open ? 'opened' : 'closed';\n//         let event = this.props.props.event;\n//         let k2 = this.props.props.k2value;\n//         return (\n//             <div className={\"line row \" + (k2 <= event.k2 ? 'k2-alert' : \"\")} key={event.id}\n//                  onClick={this.toggleOpen.bind(this)}>\n//                 {k2 <= event.k2 ? this.play : \"\"}\n//                 < div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n//                     <h6>{event.name}</h6>\n//                 </div>\n//                 <div className=\"col-md-12 col-lg-5 counters\">\n//                     {event.counters.map(c => (\n//                         <div className=\"counter\">\n//                             {c\n//                                 ? <p><b>{c}</b></p>\n//                                 : <p className=\"text-muted\">{c}</p>}\n//                         </div>\n//                     ))}\n//                 </div>\n//                 {this.state.open\n//                     ? <div className={className}>\n//                         <BlockLog eventId={event.id} level={event.level}/>\n//                     </div>\n//                     : \"\"}\n//             </div>\n//\n//         )\n//     }\n// }\n//\n// export default EventLine\n\nexport default function EventLine(props) {\n    let event = props.props.event;\n    let k2 = props.props.k2value;\n    let [isOpened, setIsOpened] = useState(false)\n    let [className, setClassName] = useState('closed')\n\n    function handleClick(){\n        setIsOpened(!isOpened)\n        setClassName(!isOpened ? 'opened' : 'closed')\n    }\n\n    return (\n        <div className={\"line row \" + (k2 <= event.k2 ? 'k2-alert' : \"\")} key={event.id}\n             onClick={handleClick}>\n            {/*{k2 <= event.k2 ? this.play : \"\"}*/}\n            < div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n                <h6>{event.name}</h6>\n            </div>\n            <div className=\"col-md-12 col-lg-5 counters\">\n                {event.counters.map(c => (\n                    <div className=\"counter\">\n                        {c\n                            ? <p><b>{c}</b></p>\n                            : <p className=\"text-muted\">{c}</p>}\n                    </div>\n                ))}\n            </div>\n            {this.state.open\n                ? <div className={className}>\n                    <BlockLog eventId={event.id} level={event.level}/>\n                </div>\n                : \"\"}\n        </div>\n\n    )\n\n}\n","import React from 'react';\n\nexport default function TableHeader(props) {\n\n    let liveEvents = props.liveEvents\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"table-header\">\n            <div className=\"line row\">\n                <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                </div>\n                <div className=\"col-md-12 col-lg-5 counters\">\n                    {baseFactors.map(factor => (\n                        <div className=\"counter\">{factor}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext();\nexport default Context\n","import React, {useContext, useState} from 'react';\nimport Context from \"../../../context\";\n\nexport default function SportCheckbox(props) {\n    const {unselectSport, selectSport} = useContext(Context)\n    const sportId = props.sport.id\n    const sportName = props.sport.name\n\n    const [checked, setChecked] = useState(true);\n    const handleChange = () => {\n        setChecked(!checked);\n        if (!checked) {\n            selectSport(sportId)\n        } else {\n            unselectSport(sportId)\n        }\n\n    };\n    return (\n        <span className={\"selector \" + (checked ? \"selected\" : \"unselected\")} onClick={handleChange} key={sportId}>\n            {sportName}\n        </span>\n    )\n}\n","import React, {useContext, useState} from 'react';\nimport Context from \"../../../context\";\n\n\nexport default function BlocksFilters() {\n    const {countersFilterUpdate, repeatsFilterUpdate} = useContext(Context)\n    let [k1value, setK1value] = useState(0)\n    let [k2value, setK2value] = useState(1)\n\n    function handleClick(k1value, k2value) {\n        countersFilterUpdate(k1value)\n        repeatsFilterUpdate(k2value)\n    }\n\n    return (\n        <div className=\"blocks-filters row\">\n            <div className=\"counters-filter col-12 col-lg-5\">\n                <label className=\"text-muted\"> Мин кол-во блокировок:</label>\n                <input type=\"number\" value={k1value} onChange={e => setK1value(e.target.value)}/>\n            </div>\n            <div className=\"repeats-filter col-12 col-lg-5\">\n                <label className=\"text-muted\"> Кол-во котир. подряд:</label>\n                <input type=\"number\" value={k2value} onChange={e => setK2value(e.target.value)}/>\n            </div>\n            <div className=\"submit-button col-12 col-lg-2\">\n                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => handleClick(k1value, k2value)}>\n                    Применить\n                </button>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState, useContext} from 'react';\nimport SportCheckbox from './sportCheckbox'\nimport BlocksFilters from \"./blocksFilters\";\n\nexport default function Filters(props) {\n    const sportFilters = props.sportFilters\n    return (\n        <div className=\"filters\">\n            <div className=\"blockLog-filters\">\n                <BlocksFilters/>\n            </div>\n            <div className=\"sport-filters\">\n                {sportFilters.map(sportData => (\n                    <SportCheckbox sport={sportData}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport EventLine from \"./eventLine\";\nimport axios from \"axios\";\nimport TableHeader from \"./tableHeader\"\nimport Context from \"../../context\";\nimport Filters from \"./tablefilters/filters\";\n\nexport default function EventTable(props) {\n\n    let [sportIds, setSportIds] = useState([])\n    let [sportFilters, setSportFilters] = useState([])\n    let [k1, setK1] = useState(0)\n    let [k2, setK2] = useState(1)\n\n\n    function unselectSport(sportId) {\n        setSportIds(sportIds.filter(id => id !== sportId))\n    }\n\n    function selectSport(sportId) {\n        setSportIds(sportIds.concat(sportId));\n    }\n\n    function countersFilterUpdate(value) {\n        setK1(value)\n    }\n\n    function repeatsFilterUpdate(value) {\n        setK2(value)\n    }\n\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: 'api/sports/'\n        }).then(response => {\n            setSportFilters(response.data)\n            let buffer = []\n            response.data.map(sportData => {\n                buffer.push(sportData.id)\n            })\n            setSportIds(buffer)\n        })\n    }, [])\n\n\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n            params: {'sports': sportIds.join(), 'k1': k1}\n        }).then(response => {\n            setLiveEvents(response.data);\n\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n                params: {'sports': sportIds.join(), 'k1': k1}\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, [sportIds, k1]);\n\n\n    return (\n\n        <div className=\"events-table\">\n            <Context.Provider value={{unselectSport, selectSport, countersFilterUpdate, repeatsFilterUpdate}}>\n                <Filters sportFilters={sportFilters}/>\n            </Context.Provider>\n            <TableHeader liveEvents={liveEvents}/>\n            <div className=\"table-body\">\n                {liveEvents.map(event => (\n                    <EventLine props={{'event': event, 'k2value': k2}}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventTable from \"./components/table/renderTable\";\nfunction App() {\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <h1>Текущие события:</h1>\n            <EventTable/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}