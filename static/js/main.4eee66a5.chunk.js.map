{"version":3,"sources":["components/table/blockLog.js","components/table/eventLine.js","components/table/tableHeader.js","context.js","components/table/tablefilters/sportCheckbox.js","components/table/tablefilters/blocksFilters.js","components/table/tablefilters/filters.js","components/table/renderTable.js","components/loginpage.js","App.js","reportWebVitals.js","index.js"],"names":["BlockLog","props","useState","blockLogs","setBlockLogs","eventId","useEffect","axios","method","url","params","then","response","data","interval","setInterval","clearInterval","className","map","blockLog","comment","score","time","param","factor","value","length","EventLine","event","k2","k2value","isOpened","setIsOpened","setClassName","useSound","play","onClick","level","name","counters","c","id","TableHeader","liveEvents","Context","React","createContext","SportCheckbox","useContext","unselectSport","selectSport","sportId","sport","sportName","checked","setChecked","BlocksFilters","countersFilterUpdate","repeatsFilterUpdate","k1value","setK1value","setK2value","type","onChange","e","target","handleClick","Filters","sportFilters","sportData","EventTable","sportIds","setSportIds","setSportFilters","k1","setK1","setK2","buffer","push","setLiveEvents","join","Provider","filter","concat","LoginForm","login","setLogin","password","setPassword","rawLogin","setRawLogin","rawPassword","setRawPassword","loginError","setLoginError","passwordError","setPasswordError","authError","setAuthError","formValid","setFormValid","auth","blurHandler","loginHandler","onBlur","placeholder","passwordHandler","status","disabled","App","isUserAuthenticated","setIsUserAuthenticated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eee66a5.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function BlockLog(props) {\n    let [blockLogs, setBlockLogs] = useState([])\n    let eventId = props.eventId;\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/event_blocks_info/',\n            params: {'event_id': eventId}\n        }).then(response => {\n            setBlockLogs(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/event_blocks_info/',\n                params: {'event_id': eventId}\n            }).then(response => {\n                setBlockLogs(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"blockLog-table\">\n            {blockLogs.map(blockLog  => (\n                <div className=\"row log\">\n                    <div className=\"log-item score col-4 col-lg-3 text-muted\">{blockLog.comment}</div>\n                    <div className=\"log-item score col-2 col-lg-1\">{blockLog.score}</div>\n                    <div className=\"log-item time col-2 col-lg-1\">{blockLog.time}</div>\n                    {(blockLog.param)\n                        ? <div className=\"log-item param col-2 col-lg-2\"> <b>{blockLog.factor}</b> ({blockLog.param})</div>\n                        : <div className=\"log-item factor col-2 col-lg-2\"><b>{blockLog.factor}</b></div>\n                    }\n                    <div className=\"log-item value col-2 col-lg-1\">{blockLog.value}</div>\n                </div>\n            ))}\n            {!blockLogs.length ? <span className=\"warning\">Не найдено блокировок по данному событию</span> : \"\"}\n        </div>\n    )\n\n}","import React, {Component, useState} from 'react';\nimport BlockLog from \"./blockLog\";\nimport MultiPlayer from \"../multiplayer\";\nimport useSound from \"use-sound\";\n\n\n// class EventLine extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {open: false}\n//         this.play = useSound('../../../../static/media/alert.mp3');\n//     }\n//\n//     toggleOpen() {\n//         this.setState({open: !this.state.open})\n//     }\n//\n//     render() {\n//         let className = this.state.open ? 'opened' : 'closed';\n//         let event = this.props.props.event;\n//         let k2 = this.props.props.k2value;\n//         return (\n//             <div className={\"line row \" + (k2 <= event.k2 ? 'k2-alert' : \"\")} key={event.id}\n//                  onClick={this.toggleOpen.bind(this)}>\n//                 {k2 <= event.k2 ? this.play : \"\"}\n//                 < div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n//                     <h6>{event.name}</h6>\n//                 </div>\n//                 <div className=\"col-md-12 col-lg-5 counters\">\n//                     {event.counters.map(c => (\n//                         <div className=\"counter\">\n//                             {c\n//                                 ? <p><b>{c}</b></p>\n//                                 : <p className=\"text-muted\">{c}</p>}\n//                         </div>\n//                     ))}\n//                 </div>\n//                 {this.state.open\n//                     ? <div className={className}>\n//                         <BlockLog eventId={event.id} level={event.level}/>\n//                     </div>\n//                     : \"\"}\n//             </div>\n//\n//         )\n//     }\n// }\n//\n// export default EventLine\n\nexport default function EventLine(props) {\n    let event = props.props.event;\n    let k2 = props.props.k2value;\n    let [isOpened, setIsOpened] = useState(false)\n    let [className, setClassName] = useState('closed')\n    let [play] = useSound('/static/media/alert.mp3');\n\n    function handleClick(){\n        setIsOpened(!isOpened)\n        setClassName(!isOpened ? 'opened' : 'closed')\n    }\n\n    return (\n        <div className={\"line row \" + (k2 <= event.k2 ? 'k2-alert' : \"\")} key={event.id}\n             onClick={handleClick}>\n            {k2 <= event.k2 ? play : \"\"}\n            < div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}>\n                <h6>{event.name}</h6>\n            </div>\n            <div className=\"col-md-12 col-lg-5 counters\">\n                {event.counters.map(c => (\n                    <div className=\"counter\">\n                        {c\n                            ? <p><b>{c}</b></p>\n                            : <p className=\"text-muted\">{c}</p>}\n                    </div>\n                ))}\n            </div>\n            {isOpened\n                ? <div className={className}>\n                    <BlockLog eventId={event.id} level={event.level}/>\n                </div>\n                : \"\"}\n        </div>\n\n    )\n\n}\n","import React from 'react';\n\nexport default function TableHeader(props) {\n\n    let liveEvents = props.liveEvents\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"table-header\">\n            <div className=\"line row\">\n                <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                </div>\n                <div className=\"col-md-12 col-lg-5 counters\">\n                    {baseFactors.map(factor => (\n                        <div className=\"counter\">{factor}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nconst Context = React.createContext();\nexport default Context\n","import React, {useContext, useState} from 'react';\nimport Context from \"../../../context\";\n\nexport default function SportCheckbox(props) {\n    const {unselectSport, selectSport} = useContext(Context)\n    const sportId = props.sport.id\n    const sportName = props.sport.name\n\n    const [checked, setChecked] = useState(true);\n    const handleChange = () => {\n        setChecked(!checked);\n        if (!checked) {\n            selectSport(sportId)\n        } else {\n            unselectSport(sportId)\n        }\n\n    };\n    return (\n        <span className={\"selector \" + (checked ? \"selected\" : \"unselected\")} onClick={handleChange} key={sportId}>\n            {sportName}\n        </span>\n    )\n}\n","import React, {useContext, useState} from 'react';\nimport Context from \"../../../context\";\n\n\nexport default function BlocksFilters() {\n    const {countersFilterUpdate, repeatsFilterUpdate} = useContext(Context)\n    let [k1value, setK1value] = useState(0)\n    let [k2value, setK2value] = useState(1)\n\n    function handleClick(k1value, k2value) {\n        countersFilterUpdate(k1value)\n        repeatsFilterUpdate(k2value)\n    }\n\n    return (\n        <div className=\"blocks-filters row\">\n            <div className=\"filter-item col-12 col-md-5 col-lg-5 row\">\n                <div className=\"description col-7 col-md-12 col-lg-7\">Мин. кол-во блокировок:</div>\n                <div className=\"value col-5 col-md-12 col-lg-5\">\n                    <input type=\"number\" value={k1value} onChange={e => setK1value(e.target.value)}/>\n                </div>\n            </div>\n            <div className=\"filter-item col-12 col-md-5 col-lg-5 row\">\n                <div className=\"description col-7 col-md-12 col-lg-7\">Кол-во котир. подряд:</div>\n                <div className=\"value col-5 col-md-12 col-lg-5\">\n                    <input type=\"number\" value={k2value} onChange={e => setK2value(e.target.value)}/>\n                </div>\n            </div>\n            <div className=\"filter-item submit-block col-12 col-md-2\">\n                <button type=\"button\" onClick={() => handleClick(k1value, k2value)}>\n                    Применить\n                </button>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState, useContext} from 'react';\nimport SportCheckbox from './sportCheckbox'\nimport BlocksFilters from \"./blocksFilters\";\n\nexport default function Filters(props) {\n    const sportFilters = props.sportFilters\n    return (\n        <div className=\"filters\">\n            <BlocksFilters/>\n            <div className=\"sport-filters\">\n                {sportFilters.map(sportData => (\n                    <SportCheckbox sport={sportData}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport EventLine from \"./eventLine\";\nimport axios from \"axios\";\nimport TableHeader from \"./tableHeader\"\nimport Context from \"../../context\";\nimport Filters from \"./tablefilters/filters\";\n\nexport default function EventTable(props) {\n\n    let [sportIds, setSportIds] = useState([])\n    let [sportFilters, setSportFilters] = useState([])\n    let [k1, setK1] = useState(0)\n    let [k2, setK2] = useState(1)\n\n\n    function unselectSport(sportId) {\n        setSportIds(sportIds.filter(id => id !== sportId))\n    }\n\n    function selectSport(sportId) {\n        setSportIds(sportIds.concat(sportId));\n    }\n\n    function countersFilterUpdate(value) {\n        setK1(value)\n    }\n\n    function repeatsFilterUpdate(value) {\n        setK2(value)\n    }\n\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: 'api/sports/'\n        }).then(response => {\n            setSportFilters(response.data)\n            let buffer = []\n            response.data.map(sportData => {\n                buffer.push(sportData.id)\n            })\n            setSportIds(buffer)\n        })\n    }, [])\n\n\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n            params: {'sports': sportIds.join(), 'k1': k1}\n        }).then(response => {\n            setLiveEvents(response.data);\n\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n                params: {'sports': sportIds.join(), 'k1': k1}\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, [sportIds, k1]);\n\n\n    return (\n\n        <div className=\"events-table\">\n            <h1>Текущие события:</h1>\n            <Context.Provider value={{unselectSport, selectSport, countersFilterUpdate, repeatsFilterUpdate}}>\n                <Filters sportFilters={sportFilters}/>\n            </Context.Provider>\n            <TableHeader liveEvents={liveEvents}/>\n            <div className=\"table-body\">\n                {liveEvents.map(event => (\n                    <EventLine props={{'event': event, 'k2value': k2}}/>\n                ))}\n            </div>\n        </div>\n    )\n}","import React, {useContext, useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport Context from \"../context\";\n\nexport default function LoginForm() {\n    let [login, setLogin] = useState('')\n    let [password, setPassword] = useState('')\n    let [rawLogin, setRawLogin] = useState(false)\n    let [rawPassword, setRawPassword] = useState(false)\n    let [loginError, setLoginError] = useState('Логин не может быть пустым')\n    let [passwordError, setPasswordError] = useState('Пароль не может быть пустым')\n    let [authError, setAuthError] = useState('')\n    let [formValid, setFormValid] = useState(false)\n\n    let {auth} = useContext(Context)\n\n    useEffect(() => {\n        setFormValid(!(loginError || passwordError))\n\n    }, [loginError, passwordError])\n\n    function blurHandler(e) {\n        switch (e.target.name) {\n            case 'login':\n                setRawLogin(true)\n                break\n            case 'password':\n                setRawPassword(true)\n                break\n        }\n    }\n\n    function loginHandler(e) {\n        if (e.target.value) {\n            setLoginError(\"\")\n        } else {\n            setLoginError(\"Логин не может быть пустым\")\n        }\n        setLogin(e.target.value)\n    }\n\n    function passwordHandler(e) {\n        if (e.target.value) {\n            setPasswordError(\"\")\n        } else {\n            setPasswordError(\"Пароль не может быть пустым\")\n        }\n        setPassword(e.target.value)\n    }\n\n\n    function submitHandler() {\n        axios({\n            method: 'POST',\n            url: '/api/login/',\n            data: {\"login\": login, \"password\": password}\n        }).then(response => {\n            if (!response.data.status) {\n                setLogin(\"\")\n                setPassword(\"\")\n                setAuthError(\"Неверный логин или пароль\")\n            } else {\n                auth(response.data.status)\n            }\n        })\n    }\n\n    return (\n        <div className='login-form'>\n            <h1>Вход</h1>\n            <h4 className='text-muted'>Для доступа к функциям сервиса необходимо авторизоваться</h4>\n            <div className='login form-item'>\n                {(rawLogin && loginError) && <div className='error'>{loginError}</div>}\n                <input onChange={(e) => loginHandler(e)} value={login}\n                       onBlur={(e) => blurHandler(e)}\n                       name='login' type=\"text\" placeholder='Логин'/>\n            </div>\n            <div className='password form-item'>\n                {(rawPassword && passwordError) && <div className='error'>{passwordError}</div>}\n                <input onChange={(e) => passwordHandler(e)} value={password}\n                       onBlur={(e) => blurHandler(e)}\n                       name='password' type=\"text\" placeholder='Пароль'/>\n            </div>\n            {authError ? <div className='error'>{authError} edaedaedaed</div> : \"\"}\n            <button onClick={submitHandler} type=\"submit\" disabled={!formValid}>Войти</button>\n        </div>\n    )\n\n\n}","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventTable from \"./components/table/renderTable\";\nimport axios from \"axios\";\nimport Context from \"./context\";\nimport LoginForm from \"./components/loginpage\";\n\nfunction App() {\n    let [isUserAuthenticated, setIsUserAuthenticated] = useState(false)\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: '/api/is_auth/'\n        }).then(response => {\n            setIsUserAuthenticated(response.data.status)\n        })\n    },[])\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: '/api/is_auth/'\n        }).then(response => {\n            setIsUserAuthenticated(response.data.status)\n        })\n    },[isUserAuthenticated])\n\n    function auth(value) {\n        setIsUserAuthenticated(value)\n    }\n\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <Context.Provider value={{auth}}>\n            {isUserAuthenticated\n            ? <EventTable/>\n            : <LoginForm/>}\n            </Context.Provider>\n            {/*<iframe src=\"/static/media/silence.mp3\" allow=\"autoplay\" id=\"audio\" style={{display: null}}/>*/}\n\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}