{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","liveEvents","setLiveEvents","useEffect","axios","method","url","then","response","data","console","log","className","length","Object","entries","win1","draw","win2","win1draw","win2draw","notDraw","totalOver","totalUnder","other","map","key","value","event","name","id","counters","c","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,I,qCCyEAA,MAnEf,WACI,MAAkCC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KAwBA,OAvBAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,YAG/BC,QAAQC,IAAIV,GAgBR,sBAAKW,UAAU,UAAf,UACI,wHACA,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,oGAA8CX,EAAWY,UACzD,qBAAKD,UAAU,WAAf,SACKE,OAAOC,QAtBd,CACdC,KAAM,IACNC,KAAM,IACNC,KAAM,IACNC,SAAU,KACVC,SAAU,KACVC,QAAS,KACTC,UAAW,eACXC,WAAY,eACZC,MAAO,mCAa0CC,KAAI,SAACC,EAAKC,GAAN,OAC7B,qBAAKf,UAAU,UAAf,SAA0Be,cAgB1C,qBAAKf,UAAU,aAAf,SACKX,EAAWwB,KAAI,SAAAG,GAAK,OACjB,sBAAKhB,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA4CgB,EAAMC,MAAjBD,EAAME,IACvC,qBAAKlB,UAAU,WAAf,SACKgB,EAAMG,SAASN,KAAI,SAAAO,GAAC,OACjB,qBAAKpB,UAAU,UAAf,SAA0BoB,EAAEL,4BClDjDM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dda5d3d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    let [liveEvents, setLiveEvents] = useState([])\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n        }).then(response => {\n            setLiveEvents(response.data);\n        })\n    })\n    console.log(liveEvents)\n    let baseFactors = {\n        win1: '1',\n        draw: 'X',\n        win2: '2',\n        win1draw: '1X',\n        win2draw: 'X2',\n        notDraw: '12',\n        totalOver: 'ТБ',\n        totalUnder: 'ТМ',\n        other: 'Всего'\n\n    }\n\n\n    return (\n        <div className=\"wrapper\">\n            <h1>Текушие события:</h1>\n            <div className=\"table\">\n                <div className=\"table-header\">\n                    <div className=\"line\">\n                        <div className=\"event-name\">Событий найдено: {liveEvents.length}</div>\n                        <div className=\"counters\">\n                            {Object.entries(baseFactors).map((key, value) =>(\n                                <div className=\"counter\">{value}</div>\n                            ))}\n\n                            {/*<div className=\"counter\">X</div>*/}\n                            {/*<div className=\"counter\">2</div>*/}\n                            {/*<div className=\"counter\">1X</div>*/}\n                            {/*<div className=\"counter\">12</div>*/}\n                            {/*<div className=\"counter\">X2</div>*/}\n                            {/*<div className=\"counter\">Ф1</div>*/}\n                            {/*<div className=\"counter\">Ф2</div>*/}\n                            {/*<div className=\"counter\">ТБ</div>*/}\n                            {/*<div className=\"counter\">ТМ</div>*/}\n                            {/*<div className=\"counter\">Всего</div>*/}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"table-body\">\n                    {liveEvents.map(event => (\n                        <div className=\"line\">\n                            <div className=\"event-name\" key={event.id}>{event.name}</div>\n                            <div className=\"counters\">\n                                {event.counters.map(c => (\n                                    <div className=\"counter\">{c.value}</div>\n                                ))}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}