{"version":3,"sources":["logo.svg","components/eventLine.js","App.js","reportWebVitals.js","index.js"],"names":["EventLine","props","event","eventToRender","className","level","name","counters","map","c","id","App","useState","liveEvents","setLiveEvents","useEffect","axios","method","url","then","response","data","interval","setInterval","clearInterval","console","log","length","factor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAe,I,oCCEA,SAASA,EAAUC,GAC9B,IAAIC,EAAQD,EAAME,cAClB,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAW,uCAAyCF,EAAMG,MAA/D,SAAsE,6BAAKH,EAAMI,SAEjF,qBAAKF,UAAU,8BAAf,SACKF,EAAMK,SAASC,KAAI,SAAAC,GAAC,OACjB,qBAAKL,UAAU,UAAf,SAAyB,4BAAIK,aALVP,EAAMQ,ICsE9BC,MApEf,WACI,MAAkCC,mBAAS,IAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAyCA,OAzCA,UAGAG,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,SAE3B,IAAMC,EAAWC,aAAY,WACzBP,IAAM,CACFC,OAAQ,MACRC,IAAK,sBACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAE5B,MACH,OAAO,kBAAMG,cAAcF,MAC5B,IAmBHG,QAAQC,IAAIb,GAIR,sBAAKT,UAAU,8BAAf,UACI,wHACA,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,gCAAf,SAA+C,yHAAsBS,EAAWc,YAEhF,qBAAKvB,UAAU,8BAAf,SAVA,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,UAAM,UAAM,eAAM,eAAM,KAWzCI,KAAI,SAAAoB,GAAM,OACnB,qBAAKxB,UAAU,UAAf,SAA0BwB,cAK1C,qBAAKxB,UAAU,aAAf,SACKS,EAAWL,KAAI,SAAAN,GAAK,OACjB,cAACF,EAAD,CAAWG,cAAeD,gBCvDnC2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb9ae810.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nexport default function EventLine(props) {\n    let event = props.eventToRender\n    return (\n        <div className=\"line row\" key={event.id}>\n            <div className={\"col-md-12 col-lg-7 event-name level-\" + event.level}><h6>{event.name}</h6>\n            </div>\n            <div className=\"col-md-12 col-lg-5 counters\">\n                {event.counters.map(c => (\n                    <div className=\"counter\"><p>{c}</p></div>\n                ))}\n            </div>\n        </div>\n    )\n}","import logo from './logo.svg';\nimport React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport EventLine from './components/eventLine'\n\nfunction App() {\n    let [liveEvents, setLiveEvents] = useState([])\n    let [eventBlocks, setEventBlocks] = useState([])\n\n\n    useEffect(() => {\n        axios({\n            method: \"get\",\n            url: '/api/live_events/',\n        }).then(response => {\n            setLiveEvents(response.data);\n        })\n        const interval = setInterval(() => {\n            axios({\n                method: \"get\",\n                url: '/api/live_events/',\n            }).then(response => {\n                setLiveEvents(response.data);\n            })\n        }, 2500);\n        return () => clearInterval(interval);\n    }, []);\n\n\n    // var\n    // const renderBlockLog = (evenId) => {\n    //     let responseData = []\n    //     axios({\n    //         method: \"get\",\n    //         url: '/api/event_blocks_info',\n    //         params: {'event_id': evenId}\n    //     }).then(response => {\n    //         responseData = response.data;\n    //     })\n    //     return(\n    //         {responseData.map()}\n    //     )\n    // }\n\n\n    console.log(liveEvents)\n    const baseFactors = ['1', 'X', '2', '1X', 'X2', '12', \"Ф1\", \"Ф2\", 'ТБ', 'ТМ', 'F']\n\n    return (\n        <div className=\"col-md-12 col-lg-11 wrapper\">\n            <h1>Текущие события:</h1>\n            <div className=\"events-table\">\n                <div className=\"table-header\">\n                    <div className=\"line row\">\n                        <div className=\"col-md-12 col-lg-7 event-name\"><h6>Событий найдено: {liveEvents.length}</h6>\n                        </div>\n                        <div className=\"col-md-12 col-lg-5 counters\">\n                            {baseFactors.map(factor => (\n                                <div className=\"counter\">{factor}</div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"table-body\">\n                    {liveEvents.map(event => (\n                        <EventLine eventToRender={event}/>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}